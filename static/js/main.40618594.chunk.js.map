{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","replace","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseFloat","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40618594.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n           Expense Tracker \r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION': \r\n        return {\r\n            ...state,\r\n            transactions: state.transactions.filter(transaction=> transaction.id !== action.payload)\r\n        }\r\n        case 'ADD_TRANSACTION': \r\n        return {\r\n            ...state,\r\n            transactions: [\r\n                action.payload, ...state.transactions\r\n            ]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial State\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider component\r\nexport const GlobalProvider = ({children}) =>{\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item)=> (acc += item), 0).toFixed(2)\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>€ {total.replace(\".\", \",\")}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item),0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * \r\n        -1\r\n        ).toFixed(2);\r\n    return (\r\n        <div className='inc-exp-container'>\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className='money plus'>{income.replace(\".\", \",\")}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className='money minus'>{expense.replace(\".\", \",\")}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n        {transaction.text} <span>{sign}€{Math.abs(transaction.amount)}</span>\r\n        <button onClick={()=> deleteTransaction(transaction.id)} className='delete-btn'>x</button>\r\n    </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {Transaction} from './Transaction';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n           <h3>History</h3>\r\n           <ul className='list'>\r\n           {transactions.map(transaction =>(\r\n            <Transaction key={transaction.id} transaction={transaction}/>\r\n           ))}\r\n              \r\n           </ul> \r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const {addTransaction} = useContext(GlobalContext);\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: parseFloat(amount.replace(/,/g, ''))\r\n        }\r\n        addTransaction(newTransaction);\r\n        setAmount(0); \r\n        setText('');\r\n    }\r\n    return (\r\n        <>\r\n          <h3>Add new transaction</h3>\r\n          <form onSubmit={onSubmit}>\r\n              <div className='form-control'>\r\n                  <label htmlFor='text'>Text</label>\r\n                  <input type='text' value={text} onChange={(e)=> setText(e.target.value)} placeholder='Enter text...'/>\r\n              </div>\r\n              <div className='form-control'>\r\n                  <label htmlFor='amount'>Amount<br/>\r\n                  (negative - expense, positive - income)\r\n                  </label>\r\n                  <input type='number' value={amount} onChange={(e)=> setAmount(e.target.value)} placeholder='Enter amount'/>\r\n              </div>\r\n              <button className='btn'>Add transaction</button>\r\n          </form>  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\n\nimport {GlobalProvider} from './context/GlobalState'\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n     <Header/>\n     <div className='container'>\n       <Balance/>\n       <IncomeExpenses/>\n       <TransactionList/>\n       <AddTransaction/>\n     </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}